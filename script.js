<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>üß† ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤ Vibes ‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div class="container">
    <div class="guide">
      <h2>üìò ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</h2>
      <p><strong>‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î:</strong> ‡∏î‡∏π‡∏à‡∏≤‡∏Å‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≠‡∏á ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô<br>
      - ‡∏Ñ‡πà‡∏≤‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‚Üí P<br>
      - ‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô ‚Üí B</p>
      <p><strong>‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î:</strong> ‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î<br>
      - ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‚Üí P<br>
      - ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‚Üí B</p>
      <p><em>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏•‡∏á DNA ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 2 ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏õ</em></p>
    </div>
    <h1>üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤ Style ‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô</h1>
    <div class="input-area">
      <label>‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà 6 ‡∏ï‡∏±‡∏ß (p/b/b/p/p/b ‡∏´‡∏£‡∏∑‡∏≠ pbpbpb):</label>
      <input id="combinedInput" type="text" placeholder="‡πÄ‡∏ä‡πà‡∏ô p/b/b/p/p/b ‡∏´‡∏£‡∏∑‡∏≠ pbpbpb">
      <button class="btn-analyze" onclick="analyze()">üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</button>
      <div id="predictionResult" class="prediction-summary"></div>
      <div class="btn-group">
        <button class="btn-result" onclick="submitResult('P')">‚úî ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á P</button>
        <button class="btn-result banker" onclick="submitResult('B')">‚úî ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á B</button>
        <button class="btn-result tie" onclick="submitResult('T')">‚úî ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á T</button>
        <button class="btn-control" onclick="undoDNA()">‚Ü© ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</button>
      </div>
    </div>
    <div class="dna-box">
      <h3>üß¨ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ DNA</h3>
      <div class="btn-group">
        <button class="btn-control" onclick="clearDNA()">üßπ ‡∏•‡πâ‡∏≤‡∏á DNA</button>
      </div>
      <p class="dna-label">‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î:</p> <div id="dna1">-</div> <div id="percent1" class="percent-box">-</div>
      <p class="dna-label">‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î:</p> <div id="dna2">-</div> <div id="percent2" class="percent-box">-</div>
    </div>
  </div>
  <script>
    let dna1 = [], dna2 = [], backupDNA = [];
    window.onload = () => {
      const saved = localStorage.getItem('dnaBackup');
      if (saved) {
        const { dna1: d1, dna2: d2 } = JSON.parse(saved);
        dna1 = d1 || []; dna2 = d2 || [];
        renderDNA();
      }
    };
    function getMinOrMaxPos(arr, mode='min') {
      const count = {};
      arr.forEach((v,i)=> count[v]?count[v].push(i):count[v]=[i]);
      const sorted = Object.entries(count).sort((a,b)=>(mode==='min'? a[1].length-b[1].length : b[1].length-a[1].length));
      return sorted[0][1][0];
    }
    function variety(arr){ return new Set(arr).size; }
    function analyze(){
      let input = document.getElementById('combinedInput').value.trim().toLowerCase();
      let raw = input.includes('/')?input.split('/') : input.split('');
      if(raw.length!==6){ document.getElementById('predictionResult').innerText='‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 6 ‡∏ï‡∏±‡∏ß'; return; }
      const main=raw.slice(0,3), ref=raw.slice(3);
      const target = variety(main)<variety(ref)?main:ref;
      const compare = target===main?ref:main;
      const minPos=getMinOrMaxPos(target,'min'), maxPos=getMinOrMaxPos(target,'max');
      const minResult = target[minPos]===compare[minPos]?'P':'B';
      const maxResult = target[maxPos]===compare[maxPos]?'P':'B';
      document.getElementById('predictionResult').innerHTML=`‚úÖ ‡∏ï‡∏±‡∏ß‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î:<strong>${minResult}</strong> | ‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î:<strong>${maxResult}</strong>`;
      new Audio('https://freesound.org/data/previews/341/341695_6261194-lq.mp3').play();
      document.getElementById('combinedInput').value='';
    }
    function submitResult(actual){
      let input=document.getElementById('combinedInput').value.trim().toLowerCase();
      let raw=input.includes('/')?input.split('/') : input.split('');
      if(raw.length!==6)return;
      const main=raw.slice(0,3), ref=raw.slice(3);
      const target = variety(main)<variety(ref)?main:ref;
      const compare = target===main?ref:main;
      const minPos=getMinOrMaxPos(target,'min'), maxPos=getMinOrMaxPos(target,'max');
      const minResult=target[minPos]===compare[minPos]?'P':'B';
      const maxResult=target[maxPos]===compare[maxPos]?'P':'B';
      backupDNA.push({dna1:[...dna1],dna2:[...dna2]});if(backupDNA.length>20)backupDNA.shift();
      updateDNA(minResult,maxResult,actual);
    }
    function updateDNA(r1,r2,actual){
      if(dna1.length>=50)dna1.shift(); if(dna2.length>=50)dna2.shift();
      dna1.push(r1===actual?'‚ö™Ô∏è':'üî¥'); dna2.push(r2===actual?'‚ö™Ô∏è':'üî¥'); renderDNA();
    }
    function renderDNA(){
      document.getElementById('dna1').innerText=dna1.join('');
      document.getElementById('dna2').innerText=dna2.join('');
      document.getElementById('percent1').innerText=`‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥:${percent(dna1)}|‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°:${detectPattern(dna1)}`;
      document.getElementById('percent2').innerText=`‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥:${percent(dna2)}|‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°:${detectPattern(dna2)}`;
      localStorage.setItem('dnaBackup',JSON.stringify({dna1,dna2}));
    }
    function percent(arr){let ok=arr.filter(e=>'‚ö™Ô∏è'===e).length;return arr.length?((ok/arr.length*100).toFixed(1)+'%'):'-';}
    function detectPattern(arr){const s=arr.map(e=>e==='‚ö™Ô∏è'?'O':'X').join('');
      if(/^(O+|X+)$/.test(s))return'‡∏°‡∏±‡∏á‡∏Å‡∏£‡∏¢‡∏≤‡∏ß';if(/^(OX){3,}|(XO){3,}$/.test(s))return'‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á';
      if(/^(OOXX|XXOO)+$/.test(s))return'‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏™‡∏≠‡∏á';if(/^(OOX|XXO){2,}$/.test(s))return'‡∏™‡∏≠‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á';
      if(/^(OXOXOX)$/.test(s))return'‡∏™‡∏•‡∏±‡∏ö‡∏¢‡∏≤‡∏ß';if(/^(OOOX|XXXO)$/.test(s))return'‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏î';
      if(/^(OXOXO)$/.test(s))return'‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô';if(/^(OO|XX)(OX|XO)(OO|XX)$/.test(s))return'‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏Å‡∏•‡∏≤‡∏á';
      return'‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡∏ä‡∏±‡∏î';}
    function clearDNA(){dna1=[];dna2=[];backupDNA=[];localStorage.removeItem('dnaBackup');renderDNA();}
    function undoDNA(){const last=backupDNA.pop();if(last){dna1=last.dna1;dna2=last.dna2;renderDNA();}}  
  </script>
</body>
</html>
<!DOCTYPE html>
<html lang="th">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>üß† ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤ Vibes ‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <div class="container">
    <div class="guide">
      <h2>üìò ‡∏™‡∏π‡∏ï‡∏£‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</h2>
      <p><strong>‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î:</strong> ‡∏î‡∏π‡∏à‡∏≤‡∏Å‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏ô‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏≠‡∏á ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ô‡πâ‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á ‡πÅ‡∏•‡πâ‡∏ß‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô<br>
      - ‡∏Ñ‡πà‡∏≤‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‚Üí P<br>
      - ‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô ‚Üí B</p>
      <p><strong>‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î:</strong> ‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏Å‡∏±‡∏ô ‡πÅ‡∏ï‡πà‡∏î‡∏π‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î<br>
      - ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‚Üí P<br>
      - ‡πÑ‡∏°‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô ‚Üí B</p>
      <p><em>‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏•‡∏á DNA ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏£‡∏≠‡∏ö‡∏ó‡∏µ‡πà 2 ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏õ</em></p>
    </div>
    <h1>üîÆ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ö‡∏≤‡∏Ñ‡∏≤‡∏£‡πà‡∏≤ Style ‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô</h1>
    <div class="input-area">
      <label>‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏Ñ‡πâ‡∏≤‡πÑ‡∏û‡πà 6 ‡∏ï‡∏±‡∏ß (p/b/b/p/p/b ‡∏´‡∏£‡∏∑‡∏≠ pbpbpb):</label>
      <input id="combinedInput" type="text" placeholder="‡πÄ‡∏ä‡πà‡∏ô p/b/b/p/p/b ‡∏´‡∏£‡∏∑‡∏≠ pbpbpb">
      <button class="btn-analyze" onclick="analyze()">üîç ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢</button>
      <div id="predictionResult" class="prediction-summary"></div>
      <div class="btn-group">
        <button class="btn-result" onclick="submitResult('P')">‚úî ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á P</button>
        <button class="btn-result banker" onclick="submitResult('B')">‚úî ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á B</button>
        <button class="btn-result tie" onclick="submitResult('T')">‚úî ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á T</button>
        <button class="btn-control" onclick="undoDNA()">‚Ü© ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</button>
      </div>
    </div>
    <div class="dna-box">
      <h3>üß¨ ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥ DNA</h3>
      <div class="btn-group">
        <button class="btn-control" onclick="clearDNA()">üßπ ‡∏•‡πâ‡∏≤‡∏á DNA</button>
      </div>
      <p class="dna-label">‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î:</p> <div id="dna1">-</div> <div id="percent1" class="percent-box">-</div>
      <p class="dna-label">‡∏™‡∏π‡∏ï‡∏£‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î:</p> <div id="dna2">-</div> <div id="percent2" class="percent-box">-</div>
    </div>
  </div>
  <script>
    let dna1 = [], dna2 = [], backupDNA = [];
    window.onload = () => {
      const saved = localStorage.getItem('dnaBackup');
      if (saved) {
        const { dna1: d1, dna2: d2 } = JSON.parse(saved);
        dna1 = d1 || []; dna2 = d2 || [];
        renderDNA();
      }
    };
    function getMinOrMaxPos(arr, mode='min') {
      const count = {};
      arr.forEach((v,i)=> count[v]?count[v].push(i):count[v]=[i]);
      const sorted = Object.entries(count).sort((a,b)=>(mode==='min'? a[1].length-b[1].length : b[1].length-a[1].length));
      return sorted[0][1][0];
    }
    function variety(arr){ return new Set(arr).size; }
    function analyze(){
      let input = document.getElementById('combinedInput').value.trim().toLowerCase();
      let raw = input.includes('/')?input.split('/') : input.split('');
      if(raw.length!==6){ document.getElementById('predictionResult').innerText='‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö 6 ‡∏ï‡∏±‡∏ß'; return; }
      const main=raw.slice(0,3), ref=raw.slice(3);
      const target = variety(main)<variety(ref)?main:ref;
      const compare = target===main?ref:main;
      const minPos=getMinOrMaxPos(target,'min'), maxPos=getMinOrMaxPos(target,'max');
      const minResult = target[minPos]===compare[minPos]?'P':'B';
      const maxResult = target[maxPos]===compare[maxPos]?'P':'B';
      document.getElementById('predictionResult').innerHTML=`‚úÖ ‡∏ï‡∏±‡∏ß‡∏ô‡πâ‡∏≠‡∏¢‡∏™‡∏∏‡∏î:<strong>${minResult}</strong> | ‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å‡∏™‡∏∏‡∏î:<strong>${maxResult}</strong>`;
      new Audio('https://freesound.org/data/previews/341/341695_6261194-lq.mp3').play();
      document.getElementById('combinedInput').value='';
    }
    function submitResult(actual){
      let input=document.getElementById('combinedInput').value.trim().toLowerCase();
      let raw=input.includes('/')?input.split('/') : input.split('');
      if(raw.length!==6)return;
      const main=raw.slice(0,3), ref=raw.slice(3);
      const target = variety(main)<variety(ref)?main:ref;
      const compare = target===main?ref:main;
      const minPos=getMinOrMaxPos(target,'min'), maxPos=getMinOrMaxPos(target,'max');
      const minResult=target[minPos]===compare[minPos]?'P':'B';
      const maxResult=target[maxPos]===compare[maxPos]?'P':'B';
      backupDNA.push({dna1:[...dna1],dna2:[...dna2]});if(backupDNA.length>20)backupDNA.shift();
      updateDNA(minResult,maxResult,actual);
    }
    function updateDNA(r1,r2,actual){
      if(dna1.length>=50)dna1.shift(); if(dna2.length>=50)dna2.shift();
      dna1.push(r1===actual?'‚ö™Ô∏è':'üî¥'); dna2.push(r2===actual?'‚ö™Ô∏è':'üî¥'); renderDNA();
    }
    function renderDNA(){
      document.getElementById('dna1').innerText=dna1.join('');
      document.getElementById('dna2').innerText=dna2.join('');
      document.getElementById('percent1').innerText=`‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥:${percent(dna1)}|‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°:${detectPattern(dna1)}`;
      document.getElementById('percent2').innerText=`‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥:${percent(dna2)}|‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°:${detectPattern(dna2)}`;
      localStorage.setItem('dnaBackup',JSON.stringify({dna1,dna2}));
    }
    function percent(arr){let ok=arr.filter(e=>'‚ö™Ô∏è'===e).length;return arr.length?((ok/arr.length*100).toFixed(1)+'%'):'-';}
    function detectPattern(arr){const s=arr.map(e=>e==='‚ö™Ô∏è'?'O':'X').join('');
      if(/^(O+|X+)$/.test(s))return'‡∏°‡∏±‡∏á‡∏Å‡∏£‡∏¢‡∏≤‡∏ß';if(/^(OX){3,}|(XO){3,}$/.test(s))return'‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á';
      if(/^(OOXX|XXOO)+$/.test(s))return'‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏™‡∏≠‡∏á';if(/^(OOX|XXO){2,}$/.test(s))return'‡∏™‡∏≠‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á';
      if(/^(OXOXOX)$/.test(s))return'‡∏™‡∏•‡∏±‡∏ö‡∏¢‡∏≤‡∏ß';if(/^(OOOX|XXXO)$/.test(s))return'‡∏™‡∏≤‡∏°‡∏ï‡∏±‡∏î';
      if(/^(OXOXO)$/.test(s))return'‡∏õ‡∏¥‡∏á‡∏õ‡∏≠‡∏á‡∏™‡∏±‡πâ‡∏ô';if(/^(OO|XX)(OX|XO)(OO|XX)$/.test(s))return'‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏î‡∏Å‡∏•‡∏≤‡∏á';
      return'‡πÑ‡∏°‡πà‡πÅ‡∏ô‡πà‡∏ä‡∏±‡∏î';}
    function clearDNA(){dna1=[];dna2=[];backupDNA=[];localStorage.removeItem('dnaBackup');renderDNA();}
    function undoDNA(){const last=backupDNA.pop();if(last){dna1=last.dna1;dna2=last.dna2;renderDNA();}}  
  </script>
</body>
</html>
